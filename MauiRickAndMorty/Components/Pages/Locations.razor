@page "/location/{LocationId}"
@using MauiRickAndMorty.Models
@using MauiRickAndMorty.Services
@inject IRickMortyServices Service



<dl>
    @if (isLoading)
    {
        <div>Cargando datos, por favor espera...</div>
    }
    else if (locationsModels != null)
    {

        <dl class="row text-white bg-dark rounded p-3">
            <h3 class="text-center text-white rounded  p-3 bg-primary p-2">Detalles de la Ubicación</h3>
            <dt class="col-sm-3 font-weight-bold">Nombre</dt>
            <dd class="col-sm-9">@locationsModels.name</dd>

            <dt class="col-sm-3 font-weight-bold">Tipo</dt>
            <dd class="col-sm-9">@locationsModels.type</dd>

            <dt class="col-sm-3 font-weight-bold">Dimensión</dt>
            <dd class="col-sm-9">@locationsModels.dimension</dd>

            <dt class="col-sm-3 font-weight-bold">Creado</dt>
            <dd class="col-sm-9">@locationsModels.created.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")</dd>
        </dl>


        <h3 class="text-center text-white rounded p-3 bg-primary p-2">Residentes</h3>

        <dd>
            
                @foreach (var resident in residentDetails)
                {
                    <div class="card bg-dark text-white">

                            <img src="@resident.image" alt="Imagen de @resident.name" />
                           <div class="card-body">
                                <dd target="_blank">@resident.name</dd>
                                <div>
                                    <span>@resident.status - @resident.species</span>
                                    <span>@resident.gender</span>
                                    <span>Creado el: @resident.created.ToString("dd/MM/yyyy")</span>
                                </div>
                           </div>
                           
                    </div>
                    <br />
                }
            
        </dd>
      
    }
   
</dl>

@code {
    private LocationsModels locationsModels;
    [Parameter]
    public string LocationId { get; set; }
    private List<Result> residentDetails = new List<Result>();
    private bool isLoading = true ;
    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        locationsModels = await Service.GetLocationById( LocationId);
        foreach (var residentUrl in locationsModels.residents)
        {
            Result resident = await Service.GetCharacterByURL(residentUrl);
            residentDetails.Add(resident);
        }
        isLoading = false;
    }
}
